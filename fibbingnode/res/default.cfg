[DEFAULT]
## Default OSPF values for the interfaces
# ospf cost/metric
cost=1
# ospf dead interval timer
dead_interval=40
# ospf hello interval timer
hello_interval=10
# ospf area
area=0.0.0.0
# How long should the fake node be valid for if the controller dies?
fake_lsa_ttl=300

## Misc params
# Path to the prefix of the fibbing-capable Quagga installation
# Should be the same than the one passed as --prefix when running the
# Quagga configure script.
quagga_path=/opt/fibbing
# Initial number of 'standby routers' hidden behind the fibbing node.
# More will be created automatically if needed.
# These provision the router ids needed to have multiple fake nodes
# for a single destination prefix.
initial_node_count=5
# Used to derive the virtual network/router-ids on the fake node
base_net=192.168.0.0/16
# the prefix len of base_net to treat as controller id
controller_prefixlen=24
# To infer the private 'link-local' IP addresses to use in forwarding addresses
# TODO -- get rid of this and directly use the IPs from the private bindings?
#      -- might be too costly though.
private_net=10.0.0.0/8
# Initially thought to control debug setting, apparently unused ...
debug=0
# The port on which we listen for the northbound controller:
# The one running the Simple/Merger/... algorithm and choosing the placement
# and cost of the fake nodes.
#@ Also used by the northbound controller to choose the destination port!
json_port=12345
# The hostname on which we listen for the northbound controller
#@ Also used by the northbound controller to choose the destination hostname!
# Can also use unix domain socket:
# unix:///path/to/socket
json_hostname=
# How many northbound controller are we accepting at once
#@ Nothing is currently made to ensure that having multiple northbound
#  controller on the same southbound controller is safe (route duplication,
#  order of updates, ...)
json_max_master=1
# Whether to draw the graph of the inferred topology or not, see lsdb.py
draw_graph=1
# Where do we store the drawn graph
graph_loc=/var/run/network.pdf
# The file linking the private ip addresses to the router/link/other router
# as these are advertized as stubnet (hence we cannot infer their counterpart
# unless we use strict
private_ips=./private_ip_binding.json
# The controller instance number
controller_instance_number=0

# Specific settings for the routers of the fake node
[fake]
# We want a relatively fast convergence for the internal routers
dead_interval=5
hello_interval=1

# Default settings for the connection(s) to the physical router(s)
[physical]
cost=10000

# Example physical interface entry if you need per-interface configuration
# [eth0]
# We can also also use the sub-second timers from quagga, see
# http://www.nongnu.org/quagga/docs/docs-info.html#OSPFv2
# dead_interval=minimal hello-multiplier 5
# hello_interval=10
# cost=10
# area=0.0.0.0
